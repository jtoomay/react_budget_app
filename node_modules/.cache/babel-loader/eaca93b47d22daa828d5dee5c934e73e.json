{"ast":null,"code":"var _jsxFileName = \"/Users/jakestraptop/Desktop/jake_budget_app/src/Contexts/BudgetContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetsContext = /*#__PURE__*/React.createContext();\nexport function useBudgets() {\n  _s();\n\n  return useContext(BudgetsContext);\n}\n\n_s(useBudgets, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const BudgetsProvider = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [budgets, setBudgets] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n\n  function getBudgetExpenses() {}\n\n  function addExpense() {}\n\n  function addBudget() {}\n\n  function deleteBudget() {}\n\n  function deleteExpense() {}\n\n  return /*#__PURE__*/_jsxDEV(BudgetsContext.Provider, {\n    value: {\n      // This will be available to anything wrapped in this context. We wrapped the whole document in this context. So that means that this whole document will have access to these values\n      budgets,\n      expenses,\n      getBudgetExpenses,\n      addExpense,\n      addBudget,\n      deleteBudget,\n      deleteExpense\n    },\n    children: [\" \", children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 12\n  }, this);\n};\n\n_s2(BudgetsProvider, \"r2M0Py5GGNrQbEix8Jxz8IIJYS0=\");\n\n_c = BudgetsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"BudgetsProvider\");","map":{"version":3,"sources":["/Users/jakestraptop/Desktop/jake_budget_app/src/Contexts/BudgetContext.js"],"names":["React","useContext","useState","BudgetsContext","createContext","useBudgets","BudgetsProvider","children","budgets","setBudgets","expenses","setExpenses","getBudgetExpenses","addExpense","addBudget","deleteBudget","deleteExpense"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;;AAGA,MAAMC,cAAc,gBAAGH,KAAK,CAACI,aAAN,EAAvB;AAGA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AACzB,SAAOJ,UAAU,CAACE,cAAD,CAAjB;AACH;;GAFeE,U;;AAKhB,OAAO,MAAMC,eAAe,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAC3C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;AAEA,WAASU,iBAAT,GAA6B,CAE5B;;AAED,WAASC,UAAT,GAAsB,CAErB;;AAED,WAASC,SAAT,GAAqB,CAEpB;;AAED,WAASC,YAAT,GAAwB,CAEvB;;AAED,WAASC,aAAT,GAAyB,CAExB;;AACD,sBAAO,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AACnC;AACAR,MAAAA,OAFmC;AAGnCE,MAAAA,QAHmC;AAInCE,MAAAA,iBAJmC;AAKnCC,MAAAA,UALmC;AAMnCC,MAAAA,SANmC;AAOnCC,MAAAA,YAPmC;AAQnCC,MAAAA;AARmC,KAAhC;AAAA,oBAUFT,QAVE;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAWH,CAlCM;;IAAMD,e;;KAAAA,e","sourcesContent":["import React, { useContext, useState } from 'react' \n\n\nconst BudgetsContext = React.createContext() \n\n\nexport function useBudgets() { \n    return useContext(BudgetsContext)\n}\n\n\nexport const BudgetsProvider = ({children}) => { \n    const [budgets, setBudgets] = useState([])\n    const [expenses, setExpenses] = useState([])\n\n    function getBudgetExpenses() { \n\n    }\n\n    function addExpense() { \n\n    }\n\n    function addBudget() { \n\n    }\n\n    function deleteBudget() { \n\n    }\n\n    function deleteExpense() { \n        \n    }\n    return <BudgetsContext.Provider value={{\n        // This will be available to anything wrapped in this context. We wrapped the whole document in this context. So that means that this whole document will have access to these values\n        budgets, \n        expenses, \n        getBudgetExpenses, \n        addExpense, \n        addBudget, \n        deleteBudget, \n        deleteExpense\n\n    }}> {children} </BudgetsContext.Provider>\n}"]},"metadata":{},"sourceType":"module"}