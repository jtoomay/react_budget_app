{"ast":null,"code":"var _jsxFileName = \"/Users/jakestraptop/Desktop/jake_budget_app/src/Components/AddBudgetModal.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Modal, Button } from 'react-bootstrap';\nimport ModalHeader from 'react-bootstrap/esm/ModalHeader';\nimport { useRef } from 'react';\nimport { useBudgets } from \"../Contexts/BudgetContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddBudgetModal(_ref) {\n  _s();\n\n  let {\n    show,\n    handleClose\n  } = _ref;\n  // Create a reference that references the variables that are stored when the dialog box pops up asking for information \n  const nameRef = useRef();\n  const maxRef = useRef();\n  const {\n    addBudget\n  } = useBudgets();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    addBudget({\n      name: nameRef.current.value,\n      max: parseFloat(maxRef.current.value)\n    });\n    handleClose(); // When we submit the form, the modal will close  \n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"New Budget\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            ref: nameRef,\n            type: \"text\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"max\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \" Maximum Spending \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            ref: maxRef,\n            type: \"number\",\n            required: true,\n            min: 0,\n            step: 0.01\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \" Add \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddBudgetModal, \"YY+djYEQFFUqobG1x6YiPmLcDFk=\", false, function () {\n  return [useBudgets];\n});\n\n_c = AddBudgetModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBudgetModal\");","map":{"version":3,"sources":["/Users/jakestraptop/Desktop/jake_budget_app/src/Components/AddBudgetModal.js"],"names":["Form","Modal","Button","ModalHeader","useRef","useBudgets","AddBudgetModal","show","handleClose","nameRef","maxRef","addBudget","handleSubmit","e","preventDefault","name","current","value","max","parseFloat"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,iBAApC;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,2BAA3B;;AAGA,eAAe,SAASC,cAAT,OAAiD;AAAA;;AAAA,MAAxB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAwB;AAC5D;AACA,QAAMC,OAAO,GAAGL,MAAM,EAAtB;AACA,QAAMM,MAAM,GAAGN,MAAM,EAArB;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAgBN,UAAU,EAAhC;;AAEA,WAASO,YAAT,CAAsBC,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,SAAS,CAAC;AACNI,MAAAA,IAAI,EAAEN,OAAO,CAACO,OAAR,CAAgBC,KADhB;AAENC,MAAAA,GAAG,EAAEC,UAAU,CAACT,MAAM,CAACM,OAAP,CAAeC,KAAhB;AAFT,KAAD,CAAT;AAIAT,IAAAA,WAAW,GANU,CAMP;AAEjB;;AACD,sBACI,QAAC,KAAD;AAAO,IAAA,IAAI,EAAED,IAAb;AAAmB,IAAA,MAAM,EAAEC,WAA3B;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEI,YAAhB;AAAA,8BACI,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACI,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,KAAD,CAAO,IAAP;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAA6B,UAAA,SAAS,EAAC,MAAvC;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,GAAG,EAAEH,OAAnB;AAA4B,YAAA,IAAI,EAAC,MAAjC;AAAwC,YAAA,QAAQ;AAAhD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAA6B,UAAA,SAAS,EAAC,KAAvC;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,GAAG,EAAEC,MAAnB;AAA2B,YAAA,IAAI,EAAC,QAAhC;AAAyC,YAAA,QAAQ,MAAjD;AAAkD,YAAA,GAAG,EAAE,CAAvD;AAA0D,YAAA,IAAI,EAAE;AAAhE;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eASI;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GArCuBJ,c;UAIED,U;;;KAJFC,c","sourcesContent":["import { Form, Modal, Button } from 'react-bootstrap'; \nimport ModalHeader from 'react-bootstrap/esm/ModalHeader';\nimport { useRef } from 'react'\nimport { useBudgets } from \"../Contexts/BudgetContext\"\n\n\nexport default function AddBudgetModal( { show, handleClose } ) {\n    // Create a reference that references the variables that are stored when the dialog box pops up asking for information \n    const nameRef = useRef() \n    const maxRef = useRef()\n    const { addBudget } = useBudgets()\n\n    function handleSubmit(e) { \n        e.preventDefault()\n        addBudget({ \n            name: nameRef.current.value, \n            max: parseFloat(maxRef.current.value), \n        })\n        handleClose() // When we submit the form, the modal will close  \n\n    }\n    return (\n        <Modal show={show} onHide={handleClose} >\n            <Form onSubmit={handleSubmit} > \n                <Modal.Header closeButton> \n                    <Modal.Title>New Budget</Modal.Title>\n                </Modal.Header>\n                <Modal.Body> \n                    <Form.Group className=\"mb-3\" controlId=\"name\"> \n                        <Form.Label> Name </Form.Label>\n                        <Form.Control ref={nameRef} type=\"text\" required />\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"max\"> \n                        <Form.Label> Maximum Spending </Form.Label>\n                        <Form.Control ref={maxRef} type=\"number\" required min={0} step={0.01} />\n                    </Form.Group>\n                    <div className=\"d-flex justify-content-end\"> \n                        <Button variant=\"primary\" type=\"submit\"> Add </Button>\n                    </div>\n                </Modal.Body>\n            </Form>\n        </Modal>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}