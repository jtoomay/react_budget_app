{"ast":null,"code":"var _jsxFileName = \"/Users/jakestraptop/Desktop/jake_budget_app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Container from 'react-bootstrap/Container';\nimport { Button, Stack } from \"react-bootstrap\";\nimport BudgetCard from './Components/BudgetCard';\nimport AddBudgetModal from './Components/AddBudgetModal';\nimport { useState } from 'react';\nimport { useBudgets } from './Contexts/BudgetContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddBudgetModal, setShowAddBudgetModal] = useState();\n  const {\n    budgets\n  } = useBudgets();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"my-4\",\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"horizontal\",\n        gap: \"2\",\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"me-auto\",\n          children: \"Budgets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => {\n            setShowAddBudgetModal(true); // When clicked, this will set the Modal to true, which will make it appear \n          },\n          children: \"Add Budget\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fill, minmax(300px, 1fr))\",\n          gap: \"1rem\",\n          alignItems: \"flex-start\"\n        },\n        children: budgets.map(budget => /*#__PURE__*/_jsxDEV(BudgetCard, {\n          name: budget.name,\n          amount: budget.amount,\n          max: budget.max\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(AddBudgetModal, {\n      show: showAddBudgetModal,\n      handleClose: () => {\n        setShowAddBudgetModal(false);\n        {\n          /* The \"show\" attribute will make this Modal show */\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"kU32Zf/tPeda+j0luLFOg4CTo4s=\", false, function () {\n  return [useBudgets];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jakestraptop/Desktop/jake_budget_app/src/App.js"],"names":["Container","Button","Stack","BudgetCard","AddBudgetModal","useState","useBudgets","App","showAddBudgetModal","setShowAddBudgetModal","budgets","display","gridTemplateColumns","gap","alignItems","map","budget","name","amount","max"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,2BAAtB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,iBAA5B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CJ,QAAQ,EAA5D;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAcJ,UAAU,EAA9B;AAEA,sBACE;AAAA,4BACA,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAAA,8BACA,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,GAAG,EAAC,GAAlC;AAAsC,QAAA,SAAS,EAAC,MAAhD;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAE,MAAM;AACvCG,YAAAA,qBAAqB,CAAC,IAAD,CAArB,CADuC,CACX;AAC7B,WAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAQA;AAAK,QAAA,KAAK,EAAE;AACVE,UAAAA,OAAO,EAAE,MADC;AAEVC,UAAAA,mBAAmB,EAAE,uCAFX;AAGVC,UAAAA,GAAG,EAAE,MAHK;AAIVC,UAAAA,UAAU,EAAE;AAJF,SAAZ;AAAA,kBAOGJ,OAAO,CAACK,GAAR,CAAYC,MAAM,iBACjB,QAAC,UAAD;AAAY,UAAA,IAAI,EAAEA,MAAM,CAACC,IAAzB;AAA+B,UAAA,MAAM,EAAED,MAAM,CAACE,MAA9C;AAAsD,UAAA,GAAG,EAAEF,MAAM,CAACG;AAAlE;AAAA;AAAA;AAAA;AAAA,gBADD;AAPH;AAAA;AAAA;AAAA;AAAA,cARA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAqBA,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAEX,kBAAtB;AAA0C,MAAA,WAAW,EAAE,MAAM;AACzDC,QAAAA,qBAAqB,CAAC,KAAD,CAArB;AAA8B;AAAC;AAAqD;AACvF;AAFD;AAAA;AAAA;AAAA;AAAA,YArBA;AAAA,kBADF;AA2BD;;GA/BQF,G;UAEaD,U;;;KAFbC,G;AAiCT,eAAeA,GAAf","sourcesContent":["import Container from 'react-bootstrap/Container';\nimport {Button, Stack} from \"react-bootstrap\";\nimport BudgetCard from './Components/BudgetCard';\nimport AddBudgetModal from './Components/AddBudgetModal';\nimport { useState } from 'react'; \nimport { useBudgets } from './Contexts/BudgetContext'\n \nfunction App() {\n  const [showAddBudgetModal, setShowAddBudgetModal] = useState()\n  const { budgets } = useBudgets() \n\n  return(\n    <>\n    <Container className=\"my-4\"> \n    <Stack direction=\"horizontal\" gap=\"2\" className=\"mb-4\"> \n      <h1 className=\"me-auto\">Budgets</h1>\n      <Button variant=\"primary\" onClick={() => { \n        setShowAddBudgetModal(true) // When clicked, this will set the Modal to true, which will make it appear \n      }}>Add Budget</Button>\n      <Button variant=\"outline-primary\">Add Expense</Button>\n    </Stack>\n    <div style={{ \n      display: \"grid\", \n      gridTemplateColumns: \"repeat(auto-fill, minmax(300px, 1fr))\", \n      gap: \"1rem\",\n      alignItems: \"flex-start\",  \n    }}\n    >\n      {budgets.map(budget => (\n        <BudgetCard name={budget.name} amount={budget.amount} max={budget.max}/>\n      ))}\n    </div>\n    </Container>\n    <AddBudgetModal show={showAddBudgetModal} handleClose={() => { \n        setShowAddBudgetModal(false); {/* The \"show\" attribute will make this Modal show */}\n    }} /> \n    </> \n  )\n}\n\nexport default App; "]},"metadata":{},"sourceType":"module"}